@model Examen.Models.Receta
@{

    ViewData["Title"] = "Receta";
}
<h2>@((Model?.IdReceta!=0? "Editar ": "Nueva ") + ViewData["Title"])</h2>
<div class="container mt-3">
    <form id="form-receta">
        <div class="row">

            <div class="col-6">

                <label>Nombre</label>
                <input id="nombre" name="nombre" type="text" class="form-control" value="@Model.Nombre"/>
            </div>
            <div class="col-6">
                <label>Descripcion</label>
                <textarea id="descripcion" name="descripcion" class="form-control">@Model.Descripcion</textarea>
            </div>
            <div class="col-6">

                <label class="btn btn-secondary mt-3 ml-3" for="imagen">Subir imagen &nbsp; <img src="~/assets/img/upload.png" /></label>
                <input lang="es" name="imagen" id="imagen" style="visibility: hidden;" type="file" accept=".jpg,.png,.jpeg">
            </div>
            <div class="col-6 text-center">
                <img id="imagenPrevisualizacion" class="mt-4 mr-3 img-fluid" style="max-height:200px" src="@Model.Imagen"/>
            </div>

        </div>
    </form>

    <div class="row mt-5">
        <div class="col-12">
            <h4>Ingredientes</h4>
        </div>
        <div class="col-6">
            <label>Nombre del ingrediente</label>
            <input name="ingrediente" id="ingrediente" type="text" class="form-control" />
            <label>Porción</label>
            <input name="porcion" id="porcion" type="text" class="form-control" />
            <button class="btn btn-primary mt-3" id="addIng">Añadir Ingrediente</button>
        </div>
        <div class="col-6">

            <table class="table" id="tableIngredientes">
                <thead>
                    <tr>
                        <th></th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Porcion</th>
                        <th scope="col">Editar</th>
                        <th scope="col">Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div class="float-lg-right pt-4">
        <button class="btn btn-success" id="subirReceta">@(Model?.IdReceta!=0?"Editar receta": "Subir receta nueva")</button>
        </div>
</div>
<div class="modal" tabindex="-1" role="dialog" id="modalIngrediente">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar Ingrediente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label>Nombre del ingrediente</label>
                <input name="editNombreIngrediente" id="editNombreIngrediente" type="text" class="form-control" />
                <label>Porción</label>
                <input name="editPorcionIngrediente" id="editPorcionIngrediente" type="text" class="form-control" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="editarIngrediente" onclick="editarIngrediente()">Editar</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
@section scripts{

    <script>

        $(document).ready(function () {
            ValidacionForm();
            if (Ingredientes.length > 0) {
                reloadIngredientes();
            }
        });
        var Ingredientes = [];
        Ingredientes =@(Html.Raw(ViewBag.Ingredientes));
        var indexEdit;
        var $seleccionArchivos;
        var imagen;
        imagen = '@(Html.Raw(ViewBag.Imagen))';
        var IdReceta = @ViewBag.IdReceta;
        $seleccionArchivos = document.querySelector("#imagen");
        $imagenPrevisualizacion = document.querySelector("#imagenPrevisualizacion");
        $seleccionArchivos.addEventListener("change", () => {

            // Los archivos seleccionados, pueden ser muchos o uno
            const archivos = $seleccionArchivos.files;
            // Si no hay archivos salimos de la función y quitamos la imagen
            if (!archivos || !archivos.length) {
                $imagenPrevisualizacion.src = "";
                return;
            }
            // Ahora tomamos el primer archivo, el cual vamos a previsualizar
            const primerArchivo = archivos[0];

            getBase64(primerArchivo).then(function (data) {

                document.getElementById("imagenPrevisualizacion").src = data;
                imagen = data;
            })

        });

        document.getElementById("subirReceta").onclick = function () { SubirReceta() };
        document.getElementById("addIng").onclick = function () { AddIngrediente() };

        function SubirReceta() {
            
            if (!$("#form-receta").valid()) {

                return;
            }

            if (imagen === undefined || imagen.length == 0) {
                swal("Sin imagen", "Es necesario subir una imagen", "warning");
                return;
            }

            if (Ingredientes.length == 0) {
                swal("Sin ingredientes", "Se necesita uno o mas ingredientes para continuar", "warning");
                return;
            }
            var receta = {};
            receta.Nombre = $("#nombre").val();
            receta.Descripcion = $("#descripcion").val();
            receta.Imagen = imagen;
            receta.IdReceta = IdReceta;
            receta.Ingredientes = Ingredientes;
            var data = {
                Receta: receta
            };

            $.ajax({
                type: "POST",
                url: "/Administrador/SubirNuevaReceta",

                data: data,
                async: false,
                cache: false,
                success: function (data) {
                    if (data.response == "Ok") {
                        swal({
                            title: "Listo",
                            text: "Cambios guardados exitosamente.",
                            icon: "success",
                            button: "Aceptar",
                        }).then((value) => {

                            window.location.href = '/Administrador'


                        })
                    } else {
                        swal("Error", "Error de comunicación con el servidor", "error");
                    }
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    swal("Error", "Error de comunicación con el servidor", "error");

                }
            });
        }
        function AddIngrediente() {
            let nombre = $("#ingrediente").val();
            let porcion = $("#porcion").val();
            if (nombre.length == 0 || porcion.length == 0) {
                swal("Datos incompletos", "No ha llenado todos los datos del ingrediente", "warning");
                return;
            }
            let ingrediente = {};
            ingrediente.Nombre = nombre;
            ingrediente.Porcion = porcion;

            Ingredientes.push(ingrediente);
            reloadIngredientes();
        }

        var reloadIngredientes = () => {
            let tr = "";
            
            Ingredientes.forEach((receta, i) => {

                tr += `<tr>
                            <td>${i + 1}</td>
                            <td>${receta.Nombre}</td>
                            <td>${receta.Porcion}</td>
                            <td class="td-buttons sub-cell" style="float: none;">
                                <button class="btn btn-primary" type="button" onclick="modalIngrediente(${i})"><i class="fa fa-edit"></i></button>
                            </td>
                            <td>
                                <button class="btn btn-danger" type="button" onclick="eliminarIngrediente(${i})"><i class="fa fa-trash"></i></button>
                            </td>
                        </tr>`;
            });

            $("#ingrediente").val("");
            $("#porcion").val("");
            $("#tableIngredientes tbody").html(tr);
        }

        var eliminarIngrediente = (Index) => {

            Ingredientes.splice(Index, 1);
            reloadIngredientes();

        }
        var modalIngrediente = (Index) => {
            let ingrediente = Ingredientes[Index]
            indexEdit = Index;
            $("#editNombreIngrediente").val(ingrediente.Nombre);
            $("#editPorcionIngrediente").val(ingrediente.Porcion);
            $("#modalIngrediente").modal('show');

        }
        var editarIngrediente = () => {

            var ingrediente = Ingredientes[indexEdit];
            ingrediente.Nombre = $("#editNombreIngrediente").val();
            ingrediente.Porcion = $("#editPorcionIngrediente").val();
            reloadIngredientes();
            $("#modalIngrediente").modal('hide');
        }

        function getBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => resolve(reader.result);
                reader.onerror = error => reject(error);
            });
        }

        var ValidacionForm = () => {

            jQuery.validator.setDefaults({

                debug: true,
                success: "valid",
                highlight: function (element) {
                    $(element).css('border-color', 'red');
                },


                unhighlight: function (element) {

                    $(element).css('background', '#ffffff');
                    $(element).css('border-color', '#256d18');

                }
            });
            $("#form-receta").validate({
                rules: {
                    nombre: {
                        required: true

                    },
                    descripcion: {
                        required: true

                    },
                },
                messages: {
                    nombre: {
                        required: "El campo es requerido",

                    },
                    descripcion: {
                        required: "El campo es requerido",

                    }
                }
            });
        }
    </script>
}
